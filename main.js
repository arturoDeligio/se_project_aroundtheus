!function(){"use strict";class t{constructor(t,e,s){this._name=t.name,this._link=t.link,this._cardSelector=e,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._likeButton.classList.toggle("card__like-button_active")}_setEventListeners(){this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)}))}getView(){return this._cardElement=this._getTemplate(),this._likeButton=this._cardElement.querySelector(".card__like-button"),this._cardDeleteButton=this._cardElement.querySelector(".card__trash-button"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}}var e=class{constructor(t,e){this._form=e,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputList=[...this._form.querySelectorAll(t.inputSelector)]}_showInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)}_hideInputError(t){const e=this._form.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)}_checkInputValidity(t){if(!t.validity.valid)return this._showInputError(t);this._hideInputError(t)}_hasInvalidInput(){return!this._inputList.every((t=>t.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((t=>{t.addEventListener("input",(e=>{this._checkInputValidity(t),this._toggleButtonState()}))}))}resetValidation(){this._inputList.forEach((t=>{this._hideInputError(t)})),this._toggleButtonState()}enableValidation(){this._form.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}};const s={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},i=document.forms["edit-card-form"],r=document.querySelector("#profile-edit-button"),n=document.querySelector("#profile-add-button"),o=(Array.from(i.querySelectorAll(".modal__input")),document.querySelector("#profile-title-input")),a=document.querySelector("#profile-description-input"),l=(document.forms["add-card-form"],"#card-template"),c=[...document.querySelectorAll(".modal__form")],u={},d={};class _{constructor(t){let{popupSelector:e}=t;this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscClose)}close=()=>{this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscClose)};_handleEscClose=t=>{"Escape"===t.key&&this.close()};setEventListeners(){this._closeButton=this._popupElement.querySelector(".modal__close"),this._closeButton.addEventListener("click",this.close),this._popupElement.addEventListener("mousedown",(t=>{t.target===t.currentTarget&&this.close()}))}}class p extends _{constructor(t,e){super(t),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=e,this._inputList=[...this._popupForm.querySelectorAll(".modal__input")]}_getInputValues(){const t={};return this._inputList.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._popupForm.addEventListener("submit",(t=>{t.preventDefault();const e=this._getInputValues();this._handleFormSubmit(e)})),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}}const m=new class{constructor(t){let{profileTitle:e,profileDescription:s}=t;this._profileTitle=document.querySelector(e),this._profileDescription=document.querySelector(s)}getUserInfo(){const t={};return t.title=this._profileTitle.textContent,t.description=this._profileDescription.textContent,t}setUserInfo(t){this._profileTitle.textContent=t.title,this._profileDescription.textContent=t.description}}({profileTitle:".profile__title",profileDescription:".profile__description"});c.forEach((t=>{const i=new e(s,t);i.enableValidation(),u[t.name]=i,d[t.name]=t}));const h=new p({popupSelector:"#profile-edit-modal"},(function(t){m.setUserInfo(t),h.close()})),E=new p({popupSelector:"#add-card-modal"},(function(t){let{title:e,link:s}=t;const i=g({name:e,link:s});f.addItem(i),u.addCardForm.disableButton(),d.addCardForm.reset(),E.close()}));E.setEventListeners();const v=new class extends _{constructor(t){super(t),this._previewImage=this._popupElement.querySelector(".modal__preview-image"),this._previewImageTitle=this._popupElement.querySelector(".modal__preview-title")}open(t){let{name:e,link:s}=t;this._previewImage.src=s,this._previewImage.alt=e,this._previewImageTitle.textContent=e,super.open()}}({popupSelector:"#preview__image-modal"});v.setEventListeners();const f=new class{constructor(t,e){let{items:s,renderer:i}=t;this._items=s,this._renderer=i,this._container=document.querySelector(e)}renderItems=()=>{this._items.forEach((t=>{this.addItem(this._renderer(t))}))};addItem=t=>{this._container.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg "}],renderer:g},".cards__gallery");function g(e){return new t(e,l,S).getView()}function S(t,e){v.open({name:t,link:e})}r.addEventListener("click",(()=>{!function(){const t=m.getUserInfo();o.value=t.title,a.value=t.description.trim()}(),u.editCardForm.resetValidation(),h.open()})),n.addEventListener("click",(()=>E.open())),f.renderItems(),h.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,